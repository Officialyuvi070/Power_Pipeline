name: Power_Pipeline
 
on:
  push

jobs:
  Build:
    runs-on: ubuntu-latest
    # needs: SonarQube
    outputs:
      artifactPath: ${{ steps.package.outputs.artifactPath }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
   
      - name: Build with Maven
        id: package
        run: mvn clean package
        # Assuming that the Maven package command generates the JAR in the target directory
        # Adjust the path accordingly if it's in a different directory
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: ${{ steps.package.outputs.artifactPath }}/target/dependency
  JFrog:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
   
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: artifact # Specify the path where you want to download the artifact
   
      - name: Jfrog push v2
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_USER: admin
          JF_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
   
      - name: Jfrog Artifactory Upload
        run: |
          jf rt u "artifact/target/dependency/*.jar" "jfrog/onlinebookstore/0.0.1-SNAPSHOT/webapp-${{ github.run_number }}"
